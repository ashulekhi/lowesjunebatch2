
JSX rules 
tags must be closed
style={{"height":"value"}}

function Ashu(){

return (
    <div>
      <button>
      <button>
    </div>
)
}

JSX 

Userlist -- list of users 

<Userlist data={listofusers} mode="admin" />
<Userlist data={listofusers} mode="meeting" />

function Userlist({data,mode}){
  if(mode=="meeting){
    return(
       <Cards View  />
    )
  }
  else{
    return (
      <Table View />
    )
  }
}

Admin  

Meet


Event handling in react 

types 
click 
minimize 
maximize 
closes 
cut 
copy 
save an image 

onEvenName={function which we want to call }

I REPEAT we will only pass funtion name we will not call the function 
onClick={getCabs}
onClick= {getCabs()} // this is wrong

onChange={handleName}
function handleName(event){

}

Data binding -- 
Props
conditional redndering 
lists rendering  
Event handling 
Child to parent communication 
References in react
state 
useState()

UseEffect()
context 
custom hooks
api calls 
routing

Input fields with the state of our component 

http://16.16.162.133/api

/ to get list of cakes from backend 
/ allcakes
get 
response - {data:[{name,cakeid,price,image}]}

/register
post 
requets - {email,name,password}
response - {message:"User Registered"} or {message:"User Already Exists"}

/login
request - {email,password}
response - {name,email,role,token}


process.env.REACT_APP_APIURL

App u are passing props to Home component ?

From home to cakelist 

From Cakelist to cake 

User name is into app 

app=>home=>Cakelist=>Cake
Props drilling --- 


Context is used to pass the value from parent to child without drilling it to each level


function Authentication(){

}

X is function
useX()

useAuthentication(){

}

var state = store.getState()
state.cartitems 


var cartitems = useSelector(state=>state.cartitems)

{name,address,city,pincode,phone,cakes,price}
/addcakeorder
post 
headers :{Authorization}

dispatch i need to tell that i need karthikeyan's help

dispatch(karthikeyan)

function soujanya(){
  return karthikeyan 
}

dispatch(soujanya())

function square(num){
  return num*num
}

var sq = num=>num*num


render component in testing env in render function

var screen  = render (<Component />)
React fragments 
<> 


</>

Re rendering --- we need to se waht all the componens are re rednering along 

<input > -- chanigng the state of the component
<input />

<Firstname />
<Secondname />

Memoization --- we can stop re rendering if the props are passed same to that component 

var SecondN